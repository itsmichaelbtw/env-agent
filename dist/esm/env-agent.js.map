{"version":3,"file":"env-agent.js","sources":["../../lib/utils.ts","../../lib/env-agent.ts"],"sourcesContent":["export function isUndefined(value: unknown): value is undefined {\r\n    return typeof value === \"undefined\";\r\n}\r\n\r\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(\r\n    obj: X,\r\n    prop: Y\r\n): obj is X & Record<Y, unknown> {\r\n    return obj.hasOwnProperty(prop);\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport os from \"os\";\r\n\r\nimport { isUndefined, hasOwnProperty } from \"./utils\";\r\n\r\nconst DOTENV_FILENAME = \".env\";\r\nconst DOTENV_LINE = /^\\s*([^\\#]+)\\s*=\\s*([^#]*)/m;\r\n\r\ninterface EnvType {\r\n    [key: string]: string;\r\n}\r\n\r\ninterface EnvManipulator {\r\n    parse(file: Buffer): EnvType;\r\n\r\n    /**\r\n     * Configures the environment variables by reading the .env file and sets the variable\r\n     * if it does not exist.\r\n     */\r\n    configure(): EnvType;\r\n\r\n    /**\r\n     * Programmatically set environment variables that are only available in the current process.\r\n     */\r\n    set(key: string, value: string): void;\r\n\r\n    /**\r\n     * Retrieve an environment variable from the current process.\r\n     */\r\n    get(key?: string): string;\r\n\r\n    DOTENV_FILENAME: string;\r\n}\r\n\r\n/**\r\n * Parses a .env file and returns an object containing the environment variables.\r\n */\r\nfunction parse(file: Buffer): EnvType {\r\n    try {\r\n        const environmentVariables: EnvType = {};\r\n        const fileAsString = file.toString();\r\n        const lines = fileAsString.replace(os.EOL, \"\\n\").split(/\\n/);\r\n\r\n        for (const potentialLine of lines) {\r\n            const isMatch = DOTENV_LINE.test(potentialLine);\r\n\r\n            if (!isMatch) {\r\n                continue;\r\n            }\r\n\r\n            const line = potentialLine.match(DOTENV_LINE);\r\n\r\n            if (line === null) {\r\n                continue;\r\n            }\r\n\r\n            const keyValuePairs = line.slice(1);\r\n\r\n            let key = keyValuePairs[0] ?? \"\";\r\n            let value = keyValuePairs[1] ?? \"\";\r\n\r\n            key = key.trim();\r\n            value = value.trim();\r\n\r\n            if (key) {\r\n                environmentVariables[key] = value;\r\n            }\r\n        }\r\n\r\n        return environmentVariables;\r\n    } catch (error) {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction configure(): EnvType {\r\n    const envPath = path.resolve(process.cwd(), DOTENV_FILENAME);\r\n\r\n    try {\r\n        const file = fs.readFileSync(envPath);\r\n        const env = parse(file);\r\n\r\n        for (const key in env) {\r\n            if (hasOwnProperty(process.env, key)) {\r\n                continue;\r\n            }\r\n\r\n            set(key, env[key]);\r\n        }\r\n\r\n        return env;\r\n    } catch (error) {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction get(key?: string): string {\r\n    if (isUndefined(key)) {\r\n        return \"\";\r\n    }\r\n\r\n    const value = process.env[key];\r\n\r\n    if (isUndefined(value)) {\r\n        return \"\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction set(key: string, value: string): void {\r\n    process.env[key] = value;\r\n}\r\n\r\nconst envAgent: EnvManipulator = {\r\n    parse: parse,\r\n    configure: configure,\r\n    get: get,\r\n    set: set,\r\n    DOTENV_FILENAME: DOTENV_FILENAME\r\n};\r\n\r\nexport default envAgent;\r\n"],"names":["isUndefined","value","hasOwnProperty","obj","prop","DOTENV_FILENAME","DOTENV_LINE","parse","file","environmentVariables","fileAsString","toString","lines","replace","os","EOL","split","potentialLine","isMatch","test","line","match","keyValuePairs","slice","key","trim","error","configure","envPath","path","resolve","process","cwd","fs","readFileSync","env","set","get","envAgent"],"mappings":"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"}